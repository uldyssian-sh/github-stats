name: Issue Management

on:
  issues:
    types: [opened, edited, labeled, unlabeled]
  pull_request:
    types: [opened, edited, labeled, unlabeled, closed]
  schedule:
    - cron: '0 1 * * *'  # Daily at 1 AM UTC
  workflow_dispatch:

permissions:
  issues: write
  pull-requests: write
  contents: read

jobs:
  auto-label:
    name: Auto Label Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened'
    
    steps:
    - name: Auto-label bug reports
      if: contains(github.event.issue.title, 'bug') || contains(github.event.issue.title, 'error') || contains(github.event.issue.title, 'fix')
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['bug', 'needs-triage']
          })
    
    - name: Auto-label feature requests
      if: contains(github.event.issue.title, 'feature') || contains(github.event.issue.title, 'enhancement') || contains(github.event.issue.title, 'add')
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['enhancement', 'needs-triage']
          })
    
    - name: Auto-label security issues
      if: contains(github.event.issue.title, 'security') || contains(github.event.issue.title, 'vulnerability') || contains(github.event.issue.title, 'cve')
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['security', 'critical', 'needs-triage']
          })

  auto-assign:
    name: Auto Assign Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened'
    
    steps:
    - name: Assign to maintainer
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.addAssignees({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            assignees: ['uldyssian-sh']
          })

  stale-management:
    name: Stale Issue Management
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Mark stale issues
      uses: actions/stale@v9
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        stale-issue-message: |
          This issue has been automatically marked as stale because it has not had recent activity. 
          It will be closed if no further activity occurs within 7 days.
          
          If this issue is still relevant, please:
          - Add a comment to keep it open
          - Add the `keep-open` label
          - Provide additional context or updates
          
          Thank you for your contribution! 🙏
        stale-pr-message: |
          This pull request has been automatically marked as stale because it has not had recent activity.
          It will be closed if no further activity occurs within 7 days.
          
          If this PR is still relevant, please:
          - Rebase against the latest main branch
          - Address any review comments
          - Add the `keep-open` label
          
          Thank you for your contribution! 🙏
        close-issue-message: |
          This issue has been automatically closed due to inactivity.
          
          If you believe this issue is still relevant, please:
          - Reopen the issue
          - Provide updated information
          - Reference any related work
          
          Thank you for your understanding! 🙏
        close-pr-message: |
          This pull request has been automatically closed due to inactivity.
          
          If you would like to continue with this PR, please:
          - Reopen the pull request
          - Rebase against the latest main branch
          - Address any outstanding review comments
          
          Thank you for your contribution! 🙏
        days-before-stale: 30
        days-before-close: 7
        stale-issue-label: 'stale'
        stale-pr-label: 'stale'
        exempt-issue-labels: 'keep-open,security,critical,pinned'
        exempt-pr-labels: 'keep-open,security,critical,pinned'
        operations-per-run: 100

  pr-auto-merge:
    name: Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
    
    steps:
    - name: Enable auto-merge for Dependabot PRs
      if: github.event.pull_request.user.login == 'dependabot[bot]'
      uses: actions/github-script@v7
      with:
        script: |
          // Check if PR is from dependabot and has passing checks
          const pr = context.payload.pull_request;
          
          // Only auto-merge patch and minor updates
          const title = pr.title.toLowerCase();
          const isPatch = title.includes('patch') || title.match(/bump .* from .* to .*\.\d+\.\d+$/);
          const isMinor = title.includes('minor') || title.match(/bump .* from .* to .*\.\d+\.0$/);
          
          if (isPatch || isMinor) {
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              event: 'APPROVE',
              body: '🤖 Auto-approving dependabot PR for patch/minor update'
            });
            
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              commit_title: `${pr.title} (#${pr.number})`,
              commit_message: 'Auto-merged by GitHub Actions',
              merge_method: 'squash'
            });
          }

  issue-metrics:
    name: Issue Metrics
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Generate issue metrics
      uses: actions/github-script@v7
      with:
        script: |
          const { data: issues } = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'all',
            per_page: 100
          });
          
          const openIssues = issues.filter(issue => issue.state === 'open' && !issue.pull_request);
          const closedIssues = issues.filter(issue => issue.state === 'closed' && !issue.pull_request);
          const openPRs = issues.filter(issue => issue.state === 'open' && issue.pull_request);
          const closedPRs = issues.filter(issue => issue.state === 'closed' && issue.pull_request);
          
          const bugIssues = openIssues.filter(issue => 
            issue.labels.some(label => label.name === 'bug')
          );
          
          const securityIssues = openIssues.filter(issue => 
            issue.labels.some(label => label.name === 'security')
          );
          
          console.log('📊 Repository Metrics:');
          console.log(`Open Issues: ${openIssues.length}`);
          console.log(`Closed Issues: ${closedIssues.length}`);
          console.log(`Open PRs: ${openPRs.length}`);
          console.log(`Closed PRs: ${closedPRs.length}`);
          console.log(`Bug Issues: ${bugIssues.length}`);
          console.log(`Security Issues: ${securityIssues.length}`);
          
          // Create summary
          const summary = `## 📊 Repository Health Metrics
          
          | Metric | Count |
          |--------|-------|
          | Open Issues | ${openIssues.length} |
          | Closed Issues | ${closedIssues.length} |
          | Open PRs | ${openPRs.length} |
          | Closed PRs | ${closedPRs.length} |
          | Bug Issues | ${bugIssues.length} |
          | Security Issues | ${securityIssues.length} |
          
          **Last Updated**: ${new Date().toISOString()}`;
          
          console.log(summary);