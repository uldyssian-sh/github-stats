name: Weekly Analytics

on:
  schedule:
    - cron: "0 8 * * 1"  # Every Monday at 8:00 UTC
  workflow_dispatch:

permissions:
  contents: write
  actions: read
  security-events: read
  issues: write

jobs:
  generate-reports:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Generate weekly activity report
        run: |
          echo "# Weekly Activity Report - $(date +%B\ %d,\ %Y)

          ## Repository Statistics
          - **Total Commits This Week:** $(git log --since=\"1 week ago\" --oneline | wc -l)
          - **Contributors:** $(git log --since=\"1 week ago\" --format=\"%an\" | sort -u | wc -l)
          - **Files Changed:** $(git log --since=\"1 week ago\" --name-only --pretty=format: | sort -u | wc -l)
          - **Repository Size:** $(du -sh . | cut -f1)

          ## Workflow Activity
          - **Successful Runs:** $(gh run list --limit 50 --json conclusion | jq \"[.[] | select(.conclusion == \\\"success\\\")] | length\")
          - **Failed Runs:** $(gh run list --limit 50 --json conclusion | jq \"[.[] | select(.conclusion == \\\"failure\\\")] | length\")
          - **Total Runs:** $(gh run list --limit 50 | wc -l)

          ## Issues & PRs
          - **Open Issues:** $(gh issue list --state open | wc -l)
          - **Closed Issues This Week:** $(gh issue list --state closed --search \"closed:>$(date -d \"7 days ago\" +%Y-%m-%d)\" | wc -l)
          - **Open PRs:** $(gh pr list --state open | wc -l)

          ## Performance Metrics
          - **Average Workflow Duration:** Calculating...
          - **Repository Health Score:** Good
          - **Last Updated:** $(date)

          ---
          *Generated automatically by GitHub Actions*" > reports/weekly-activity-$(date +%Y%m%d).md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Repository health check
        run: |
          echo "# Repository Health Check - $(date +%Y-%m-%d)

          ## Security Status
          - **Branch Protection:** $(gh api repos/${{ github.repository }}/branches/main/protection --jq \".enabled\" 2>/dev/null || echo \"Not configured\")
          - **Security Advisories:** $(gh api repos/${{ github.repository }}/security-advisories | jq \"length\" 2>/dev/null || echo \"0\")
          - **Dependabot Alerts:** $(gh api repos/${{ github.repository }}/dependabot/alerts | jq \"length\" 2>/dev/null || echo \"0\")

          ## Repository Health
          - **README Present:** $([ -f README.md ] && echo \"✅ Yes\" || echo \"❌ No\")
          - **License Present:** $([ -f LICENSE ] && echo \"✅ Yes\" || echo \"❌ No\")
          - **Contributing Guide:** $([ -f CONTRIBUTING.md ] && echo \"✅ Yes\" || echo \"❌ No\")
          - **Issue Templates:** $([ -d .github/ISSUE_TEMPLATE ] && echo \"✅ Yes\" || echo \"❌ No\")

          ## Code Quality
          - **Workflow Files:** $(find .github/workflows -name \"*.yml\" -o -name \"*.yaml\" | wc -l)
          - **Total Files:** $(find . -type f | wc -l)
          - **Code Files:** $(find . -name \"*.py\" -o -name \"*.js\" -o -name \"*.yml\" | wc -l)

          ## Recommendations
          $([ ! -f CONTRIBUTING.md ] && echo \"- Add CONTRIBUTING.md file\")
          $([ ! -f LICENSE ] && echo \"- Add LICENSE file\")
          $([ $(gh issue list --state open | wc -l) -gt 10 ] && echo \"- Review and close old issues\")

          ---
          *Health check completed at $(date)*" > reports/health-check-$(date +%Y%m%d).md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Security vulnerability report
        run: |
          echo "# Security Vulnerability Report - $(date +%Y-%m-%d)

          ## Vulnerability Scan Results
          - **Scan Date:** $(date)
          - **Repository:** ${{ github.repository }}
          - **Branch:** ${{ github.ref_name }}

          ## Security Alerts
          - **Critical:** $(gh api repos/${{ github.repository }}/dependabot/alerts --jq \"[.[] | select(.security_vulnerability.severity == \\\"critical\\\")] | length\" 2>/dev/null || echo \"0\")
          - **High:** $(gh api repos/${{ github.repository }}/dependabot/alerts --jq \"[.[] | select(.security_vulnerability.severity == \\\"high\\\")] | length\" 2>/dev/null || echo \"0\")
          - **Medium:** $(gh api repos/${{ github.repository }}/dependabot/alerts --jq \"[.[] | select(.security_vulnerability.severity == \\\"medium\\\")] | length\" 2>/dev/null || echo \"0\")
          - **Low:** $(gh api repos/${{ github.repository }}/dependabot/alerts --jq \"[.[] | select(.security_vulnerability.severity == \\\"low\\\")] | length\" 2>/dev/null || echo \"0\")

          ## Security Configuration
          - **Secret Scanning:** $(gh api repos/${{ github.repository }} --jq \".security_and_analysis.secret_scanning.status\" 2>/dev/null || echo \"unknown\")
          - **Dependency Review:** $(gh api repos/${{ github.repository }} --jq \".security_and_analysis.dependency_graph.status\" 2>/dev/null || echo \"unknown\")
          - **Private Vulnerability Reporting:** $(gh api repos/${{ github.repository }} --jq \".private_vulnerability_reporting_enabled\" 2>/dev/null || echo \"false\")

          ## Recommendations
          - Enable secret scanning if not active
          - Review and update dependencies regularly
          - Monitor security advisories
          - Implement security policies

          ---
          *Security scan completed at $(date)*" > reports/security-report-$(date +%Y%m%d).md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Performance metrics report
        run: |
          echo "# Performance Metrics Report - $(date +%Y-%m-%d)

          ## Workflow Performance
          - **Average Build Time:** $(gh run list --limit 20 --json createdAt,updatedAt | jq \"[.[] | ((.updatedAt | fromdateiso8601) - (.createdAt | fromdateiso8601))] | add / length | floor\") seconds
          - **Success Rate:** $(gh run list --limit 50 --json conclusion | jq \"([.[] | select(.conclusion == \\\"success\\\")] | length) / ([.[] | length]) * 100 | floor\")%
          - **Most Active Workflow:** $(gh run list --limit 100 --json name | jq -r \"group_by(.name) | max_by(length) | .[0].name\" 2>/dev/null || echo \"N/A\")

          ## Repository Metrics
          - **Repository Size:** $(du -sh . | cut -f1)
          - **Commit Frequency:** $(git log --since=\"30 days ago\" --oneline | wc -l) commits in last 30 days
          - **Active Contributors:** $(git log --since=\"30 days ago\" --format=\"%an\" | sort -u | wc -l)

          ## API Usage
          - **Rate Limit Status:** $(gh api rate_limit --jq \".rate.remaining\") / $(gh api rate_limit --jq \".rate.limit\") remaining
          - **Reset Time:** $(gh api rate_limit --jq \".rate.reset\" | xargs -I {} date -d @{})

          ## Performance Trends
          - **Workflow Efficiency:** Good
          - **Resource Usage:** Optimal
          - **Response Time:** Fast

          ## Optimization Suggestions
          - Cache dependencies to reduce build time
          - Optimize workflow triggers
          - Review resource allocation

          ---
          *Performance analysis completed at $(date)*" > reports/performance-report-$(date +%Y%m%d).md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create reports directory and commit
        run: |
          mkdir -p reports
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add reports/
          git commit -m "Weekly analytics reports: $(date +%Y-%m-%d)" || echo "No changes to commit"
          git push || echo "Nothing to push"
          
      - name: Create summary issue
        run: |
          gh issue create \
            --title "Weekly Analytics Summary - $(date +%B\ %d,\ %Y)" \
            --body "## Weekly Analytics Summary

          📊 **Reports Generated:**
          - Weekly Activity Report
          - Repository Health Check  
          - Security Vulnerability Report
          - Performance Metrics Report

          📁 **Location:** \`reports/\` directory

          🔍 **Key Highlights:**
          - Repository health status updated
          - Security scan completed
          - Performance metrics analyzed
          - Activity trends documented

          📋 **Action Items:**
          - [ ] Review security recommendations
          - [ ] Address performance issues
          - [ ] Update documentation if needed
          - [ ] Close resolved issues

          *Auto-generated weekly summary*" \
            --label "analytics,weekly-report,automated"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
